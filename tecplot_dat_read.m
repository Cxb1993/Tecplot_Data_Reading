function [x,y,z,zone,head,depth2gwt,vx,vy,vz,ele_node_lst,mesh_node_lst,n_nodes,n_elms]=tecplot_dat_read(filename,meshtype,nlayers)
% tecplot_dat_read Read Tecplot importable format *.dat file generated by
% HydroGeoSphere named as prefixo.pm.dat.

%   Input:
%   meshtype: triangle: tri
%             rectangle: rect
%   ChaoWang20151112

%   ChaoWang201512052109:
%   Add codes to get node list for segments and nodes of boundary.
%   How to get node list for segments? For each 2D mesh, we can get the
%   node list for triangles. Each triangle has three nodes that can define
%   three segments. First we can get segments for all triangles. Then those
%   segments that appear twice are internal segments. By getting rid of the
%   repeating segments we can get the segment modes list for 2D triangle
%   mesh. Those segments that only appear once are boundary segments. From
%   these segments we can find node list of boundary.

%   ChaoWang201512120850:
%   Function name changed from read_tecplot_dat to tecplot_dat_read
[n_nodes,n_elms,fpst]=tecplot_dat_info(filename);
fid=fopen(filename,'r');
fseek(fid,fpst,'bof');

[~]=fgetl(fid);
x=fscanf(fid,'%f',n_nodes);

[~]=fgetl(fid);
[~]=fgetl(fid);
y=fscanf(fid,'%f',n_nodes);

[~]=fgetl(fid);
[~]=fgetl(fid);
z=fscanf(fid,'%f',n_nodes);

[~]=fgetl(fid);
[~]=fgetl(fid);
zone=fscanf(fid,'%d',n_elms);

[~]=fgetl(fid);
[~]=fgetl(fid);
head=fscanf(fid,'%f',n_nodes);

[~]=fgetl(fid);
[~]=fgetl(fid);
depth2gwt=fscanf(fid,'%f',n_nodes);

[~]=fgetl(fid);
[~]=fgetl(fid);
vx=fscanf(fid,'%f',n_elms);

[~]=fgetl(fid);
[~]=fgetl(fid);
vy=fscanf(fid,'%f',n_elms);

[~]=fgetl(fid);
[~]=fgetl(fid);
vz=fscanf(fid,'%f',n_elms);

[~]=fgetl(fid);
[~]=fgetl(fid);
ele_node_lst=fscanf(fid,'%8d',n_elms*8);

fclose(fid);

x=reshape(x,[numel(x)/(nlayers+1) nlayers+1]);
y=reshape(y,[numel(y)/(nlayers+1) nlayers+1]);
z=reshape(z,[numel(z)/(nlayers+1) nlayers+1]);

zone=reshape(zone,[numel(zone)/nlayers nlayers]);

head=reshape(head,[numel(head)/(nlayers+1) nlayers+1]);

depth2gwt=reshape(depth2gwt,[numel(depth2gwt)/(nlayers+1) nlayers+1]);

vx=reshape(vx,[numel(vx)/nlayers nlayers]);
vy=reshape(vy,[numel(vy)/nlayers nlayers]);
vz=reshape(vz,[numel(vz)/nlayers nlayers]);
% Prism element node list.
ele_node_lst=reshape(ele_node_lst,[8 n_elms/nlayers nlayers]);
ele_node_lst=permute(ele_node_lst,[2 1 3]);
% Triangular mesh node list.
if strcmp(meshtype,'tri')
    n_ele_node=3;
elseif strcmp(meshtype,'rect')
    n_ele_node=4;
end
mesh_node_lst=ones(n_elms/nlayers,n_ele_node,nlayers+1);
mesh_node_lst(:,:,1:end-1)=ele_node_lst(:,1:n_ele_node,:);
mesh_node_lst(:,:,end)=ele_node_lst(:,end-3:end-4+n_ele_node,end);
mesh_node_lst=permute(mesh_node_lst,[3 1 2]);
ele_node_lst=permute(ele_node_lst,[3 1 2]);
end

